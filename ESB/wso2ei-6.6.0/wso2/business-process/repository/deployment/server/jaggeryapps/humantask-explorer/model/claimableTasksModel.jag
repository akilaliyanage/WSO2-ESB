<%
/*
 * Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 * 
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

    var log = new Log();

    //initialize BPS HT service request creator
    var htRequest = require ('/js/WSHTRequest.js');
    htRequest.initHTServerInfo(BPSUrl, session.get('BPSSessionCookie'));

    var pagination = request.getParameter("pagination");
    if (pagination == null || pagination === "") {
        pagination = 1;
    }

    var pageSize = 10;
    var pageNumber = pagination - 1;
    var queryOrder = 'DESCENDING';
    var queryOrderBy = 'CREATED_DATE';
    var queryCategory = 'CLAIMABLE';

    try {
        var taskXMLList = null;
        var paginatePageCount = 0;
        var BPSResponseXML = new XML(htRequest.simpleQueryBasic("", pageSize, pageNumber, queryCategory,
                                                                queryOrder, queryOrderBy));
          if(BPSResponseXML == null || BPSResponseXML == ""){
              if (log.isDebugEnabled()) {
                  log.debug('Session timed out for request'+ "" + htRequest);
              }
              session.put('authSuccess', false);
              response.sendRedirect('login');
          }
        if (log.isDebugEnabled()) {
            log.debug('simpleQueryBasic BPS RESPONSE : ' + BPSResponseXML);
        }

        taskXMLList = BPSResponseXML..SOAPENV_NS::Body.NS2_NS::simpleQueryResponse.NS2_NS::taskSimpleQueryResultSet.NS1_NS::row;
        paginatePageCount =  parseInt(BPSResponseXML..SOAPENV_NS::Body.NS2_NS::simpleQueryResponse.NS2_NS::taskSimpleQueryResultSet.NS1_NS::pages);
    } catch(e) {
        log.error('Error occurred while connecting to the back-end BPS HumanTaskClientAPIAdmin service : ');
        log.error(e);
        session.put('authSuccess', false);
        response.sendRedirect('login');
    }

    //Set current active veiw as claimableTasks. 
    //This is used to highlight current view which the user currently viewing in the navigation bar
    claimableTasksNavActive = 'class="active"';
%>