<%
/*
 * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

include ("/model/common.jag");

if (request.isSecure()) {//check whether the request is secure or not

    //initialize BPS HT service request creator
    var htRequest = require ('/js/WSHTRequest.js');
    htRequest.initHTServerInfo(BPSUrl, session.get('BPSSessionCookie'));

    try {

        var formParameters = request.getAllParameters();

        var valueList = '';
        var taskID = '';

        for (var i in formParameters) {

            //wso2_WS_HumanTask_Task_Identifier is predefined input name used in HT rendering form
            //therefor HT definition author should not use wso2_WS_HumanTask_Task_Identifier as unique identifier (id) for
            //ht output rendering elements
            if (i.toString() === 'wso2_WS_HumanTask_Task_Identifier'){
                taskID = formParameters[i];
            } else {
                valueList += '<value id="' + i + '">' + formParameters[i] + '</value>';
            }

        }

        var bpsResponse = new XML(htRequest.completeTask (taskID, valueList));
        if(bpsResponse == null || bpsResponse == ""){ //session timeout
            if (log.isDebugEnabled()) {
                log.debug('Session timed out for task'+ "" + taskID);
            }
            session.put('authSuccess', false);
            var queryParameters = request.getQueryString();
            if(queryParameters == "null" || queryParameters == null){
                response.sendRedirect("../../login?requestUrl=" + request.getRequestURI());
            } else{
                response.sendRedirect("../../login?requestUrl=" + request.getRequestURI() + "%3F" + request.getQueryString());
            }
        } else {
            var success = bpsResponse.SOAPENV_NS::Body.rendering_NS::completeTaskResponse.success.text().toString();

            if (success != null && success === 'false') {
                log.error('Task Completion failed');
            }

            response.sendRedirect('../../task?id=' + taskID);
        }
        /*
                SAMPLE SUCCESS RESPONSE
         <?xml version="1.0" encoding="UTF-8"?>
         <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
             <soapenv:Body>
                 <ns1:completeTaskResponse xmlns:ns1="http://wso2.org/ht/schema/renderings/">
                    <success>true</success>
                 </ns1:completeTaskResponse>
             </soapenv:Body>
         </soapenv:Envelope>

         */

    } catch(e) {
        log.error('Error occurred while connecting to the back-end BPS HumanTaskRenderingAPI service : ');
        log.error(e);
        var responseMsg = '<fault_taskCompletionResponse>\
                                    <success>false</success>\
                                    <data>' + e.message + '</data>\
                                </fault_taskCompletionResponse>';
        response.contentType = 'text/xml';
        response.content = responseMsg;
    }

} else {
    //request is not secured, therefore need redirect to the secure channel
    var responseMsg = '<fault_taskCompletionResponse>\
                            <success>false</success>\
                            <data>Unsecure request, use https</data>\
                        </fault_taskCompletionResponse>';
    response.contentType = 'text/xml';
    response.status = 500;
    response.content = responseMsg;
}



%>