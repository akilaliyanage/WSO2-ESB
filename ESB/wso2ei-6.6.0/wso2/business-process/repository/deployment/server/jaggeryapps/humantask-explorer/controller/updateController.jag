<%
/*
 * Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 * 
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

include ("/model/common.jag");

if (request.isSecure()) {//check whether the request is secure or not

    include("/model/BPSWSRequest.jag");

    var log = new Log();
    var taskId = request.getParameter('tid');
    var updateType = request.getParameter('type');
    if (log.isDebugEnabled()) {
        log.debug('Task Id : ' + taskId);
        log.debug('Update Type : ' + updateType);
    }

    var responseMsg;
    try {
        if (updateType === 'update_comments') {
            //update comments
            var result = retrieveComments(taskId);
            if (log.isDebugEnabled()) {
                log.debug('COMMENTS RESPONSE: ' + result);
            }

            var resultCheck = result.SOAPENV_NS::Body.NS2_NS::getCommentsResponse;

            if (resultCheck.length() > 0) {
                //comment retrieval success
                responseMsg = '<update_commentsResponse>\
                                    <success>true</success>\
                                    <data>' +result.SOAPENV_NS::Body.NS2_NS::getCommentsResponse +'</data>\
                                </update_commentsResponse>';

            } else {
                if(result == null || result == '') { // session timeout
                    if (log.isDebugEnabled()) {
                        log.debug('Session timed out for task'+ "" + taskId);
                    }
                    responseMsg = '<update_commentsResponse><success>timeout</success></update_commentsResponse>';
                }
                else {
                    responseMsg = '<update_commentsResponse>\
                                    <success>false</success>\
                                    <data>' + result.SOAPENV_NS::Body + '</data>\
                                </update_commentsResponse>';
                }
            }

            response.contentType = 'text/xml';
            response.content = responseMsg;


        } else if (updateType === 'update_history') {
            //update History
            var result = retrieveHistory(taskId);
            if (log.isDebugEnabled()) {
                log.debug('HISTORY RESPONSE: ' + result);
            }

            var resultCheck = result.SOAPENV_NS::Body.NS2_NS::loadTaskEventsResponse;

            if (resultCheck.length() > 0) {
                //history retrieval success
                responseMsg = '<update_historyResponse>\
                                    <success>true</success>\
                                    <data>' +result.SOAPENV_NS::Body.NS2_NS::loadTaskEventsResponse +'</data>\
                                </update_historyResponse>';

            } else {
                if(result == null || result == '') { // session timeout
                    if (log.isDebugEnabled()) {
                        log.debug('Session timed out for task'+ "" + taskId);
                    }
                    responseMsg = '<update_historyResponse><success>timeout</success></update_historyResponse>';
                }else {
                    responseMsg = '<update_historyResponse>\
                                    <success>false</success>\
                                    <data>' + result.SOAPENV_NS::Body + '</data>\
                                </update_historyResponse>';
                }
            }

            response.contentType = 'text/xml';
            response.content = responseMsg;

            /*
             * SAMPLE SUCCESS RESPONSE
                <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
                   <soapenv:Body>
                      <ns2:loadTaskEventsResponse xmlns:ns2="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803">
                         <ns2:taskEvents>
                            <event xmlns="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803">
                               <eventId>11208</eventId>
                               <eventType>addcomment</eventType>
                               <eventInitiator>regionalClerkUser2</eventInitiator>
                               <oldState>IN_PROGRESS</oldState>
                               <newState>IN_PROGRESS</newState>
                               <eventDetail/>
                               <eventTime>2014-08-22T17:41:53.293+05:30</eventTime>
                            </event>
                            <event xmlns="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803">
                               <eventId>11209</eventId>
                               <eventType>addcomment</eventType>
                               <eventInitiator>regionalClerkUser2</eventInitiator>
                               <oldState>IN_PROGRESS</oldState>
                               <newState>IN_PROGRESS</newState>
                               <eventDetail/>
                               <eventTime>2014-08-22T17:42:15.270+05:30</eventTime>
                            </event>
                         </ns2:taskEvents>
                      </ns2:loadTaskEventsResponse>
                   </soapenv:Body>
                </soapenv:Envelope>
            */
        } else if (updateType === 'update_assignableUsers') {
            //retrive assignable user list
            var result = retrieveAssignableUserList(taskId);
            if (log.isDebugEnabled()) {
                log.debug('RESULT : ' + result);
            }
            var resultCheck = result.SOAPENV_NS::Body.NS2_NS::getAssignableUserListResponse;

            if (resultCheck.length() > 0) {
                //comment retrieval success
                responseMsg = '<update_assignableUsersResponse>\
                                    <success>true</success>\
                                    <data>' +result.SOAPENV_NS::Body.NS2_NS::getAssignableUserListResponse +'</data>\
                                </update_assignableUsersResponse>';
            } else {
                if(result == null || result == '') { // session timeout
                    if (log.isDebugEnabled()) {
                        log.debug('Session timed out for task'+ "" + taskId);
                    }
                    responseMsg = '<update_assignableUsersResponse><success>timeout</success></update_assignableUsersResponse>';
                }else {
                    responseMsg = '<update_assignableUsersResponse>\
                                    <success>false</success>\
                                    <data>' + result.SOAPENV_NS::Body + '</data>\
                                </update_assignableUsersResponse>';
                }
            }

            response.contentType = 'text/xml';
            response.content = responseMsg;

            /*
             * SAMPLE SUCCESS RESPONSE
             * <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
                   <soapenv:Body>
                      <ns2:getAssignableUserListResponse xmlns:ns2="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803">
                         <ns2:user>regionalClerkUser</ns2:user>
                         <ns2:user>regionalClerkUser2</ns2:user>
                      </ns2:getAssignableUserListResponse>
                   </soapenv:Body>
                </soapenv:Envelope>
            */
        } else if (updateType === 'update_attachments') {
            //retrive attachment list
            var result = retrieveAttachments(taskId);
            if (log.isDebugEnabled()) {
                log.debug('RESULT : ' + result);
            }
            var resultCheck = result.SOAPENV_NS::Body.NS2_NS::getAttachmentInfosResponse;

            if (resultCheck.length() > 0) {
                //comment retrieval success
                responseMsg = '<update_attachmentsResponse>\
                                    <success>true</success>\
                                    <bpsUrl>' + application.get('serverAddress') + application.get('tenantUrlPart') + '</bpsUrl>\
                        <data>' +result.SOAPENV_NS::Body.NS2_NS::getAttachmentInfosResponse +'</data>\
                                </update_attachmentsResponse>';
            } else {
                if(result == null || result == '') { // session timeout
                    if (log.isDebugEnabled()) {
                        log.debug('Session timed out for task'+ "" + taskId);
                    }
                    responseMsg = '<update_attachmentsResponse><success>timeout</success></update_attachmentsResponse>';
                }else {
                    responseMsg = '<update_attachmentsResponse>\
                                    <success>false</success>\
                                    <data>' + result.SOAPENV_NS::Body + '</data>\
                                </update_attachmentsResponse>';
                }
            }

            response.contentType = 'text/xml';
            response.content = responseMsg;

            /*
             * SAMPLE SUCCESS RESPONSE
                <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
                   <soapenv:Body>
                      <ns2:getAttachmentInfosResponse xmlns:ns2="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803">
                         <ns2:info>
                            <ns1:identifier xmlns:ns1="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803">https://10.100.5.92:9445/attachment-mgt/download/ds3qo0rin3uchq6se9f16a9jmn</ns1:identifier>
                            <ns1:name xmlns:ns1="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803">1981-Alpina-B9-3.5-based-on-BMW-5er-E28-8.jpg</ns1:name>
                            <ns1:accessType xmlns:ns1="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803">AnonymousAccessType</ns1:accessType>
                            <ns1:contentType xmlns:ns1="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803">image/jpeg</ns1:contentType>
                            <ns1:contentCategory xmlns:ns1="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803">http://www.iana.org/assignments/media-types/</ns1:contentCategory>
                            <ns1:attachedTime xmlns:ns1="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803">1970-01-01T05:30:00.000+05:30</ns1:attachedTime>
                            <ns1:attachedBy xmlns:ns1="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803">DummyUser</ns1:attachedBy>
                         </ns2:info>
                      </ns2:getAttachmentInfosResponse>
                   </soapenv:Body>
                </soapenv:Envelope>
             * */

        }


    } catch (e) {
        log.error('Error occurred while connecting to the back-end BPS HumanTaskClientAPIAdmin service : ');
        log.error(e);
        responseMsg = '<fault_Response>\
                            <success>false</success>\
                            <data>' +e.message +'</data>\
                        </fault_Response>';
        response.contentType = 'text/xml';
        response.content = responseMsg;
    }

} else {
    //request is not secured, therefore need redirect to the secure channel
    var responseMsg = '<fault_Response>\
                            <success>false</success>\
                            <data>Unsecure request, use https</data>\
                        </fault_Response>';
    response.contentType = 'text/xml';
    response.status = 500;
    response.content = responseMsg;
}

/**
 * function to retrieve comments
 * @param  id task Id
 * @return XML response payload
 * @throws {org.mozilla.javascript.WrappedException}  if connection error occurred
 */
function retrieveComments(id) {
    var payload = '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"\
                                    xmlns:ns="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803">\
                       <soapenv:Header/>\
                       <soapenv:Body>\
                          <ns:getComments>\
                             <ns:identifier>'+id +'</ns:identifier>\
                          </ns:getComments>\
                       </soapenv:Body>\
                    </soapenv:Envelope>';

    var BPSSessionCookie = session.get('BPSSessionCookie');
    var endPoint = BPSUrl + '/services/HumanTaskClientAPIAdmin/';
    var soapAction = 'http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803/getComments';
    var result = new XML(requestBPS(endPoint, soapAction,BPSSessionCookie, payload));
    return result;
}


/**
 * function to retrieve history information
 * @param  id task Id
 * @return XML response payload
 * @throws {org.mozilla.javascript.WrappedException}  if connection error occurred
 */
function retrieveHistory(id) {
    var payload = '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"\
                                xmlns:ns="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803">\
                       <soapenv:Header/>\
                       <soapenv:Body>\
                          <ns:loadTaskEvents>\
                             <ns:identifier>'+id +'</ns:identifier>\
                          </ns:loadTaskEvents>\
                       </soapenv:Body>\
                    </soapenv:Envelope>';
    var BPSSessionCookie = session.get('BPSSessionCookie');
    var endPoint = BPSUrl + '/services/HumanTaskClientAPIAdmin/';
    var soapAction = 'http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803/loadTaskEvents';
    var result = new XML(requestBPS(endPoint, soapAction, BPSSessionCookie, payload));
    return result;
}

/**
 * function to retrieve list of assignable users
 * @param  id task Id
 * @return XML response payload
 * @throws {org.mozilla.javascript.WrappedException}  if connection error occurred
 */
function retrieveAssignableUserList(id) {

    var payload = '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"\
                                    xmlns:ns="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803">\
                               <soapenv:Header/>\
                               <soapenv:Body>\
                                  <ns:getAssignableUserList>\
                                     <ns:identifier>'+id +'</ns:identifier>\
                                  </ns:getAssignableUserList>\
                               </soapenv:Body>\
                            </soapenv:Envelope>';
    var BPSSessionCookie = session.get('BPSSessionCookie');
    var endPoint = BPSUrl + '/services/HumanTaskClientAPIAdmin/';
    var soapAction = 'http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803/getAssignableUserList';
    var result = new XML(requestBPS(endPoint, soapAction, BPSSessionCookie, payload));
    return result;

}


/**
 * function to retrieve attachment list
 * @param  id task Id
 * @return XML response payload
 * @throws {org.mozilla.javascript.WrappedException}  if connection error occurred
 */
function retrieveAttachments(id) {
    var payload = '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"\
                        xmlns:ns="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803">\
                       <soapenv:Header/>\
                       <soapenv:Body>\
                          <ns:getAttachmentInfos>\
                             <ns:identifier>'+id +'</ns:identifier>\
                          </ns:getAttachmentInfos>\
                       </soapenv:Body>\
                    </soapenv:Envelope>';
    var BPSSessionCookie = session.get('BPSSessionCookie');
    var endPoint = BPSUrl + '/services/HumanTaskClientAPIAdmin/';
    var soapAction = 'http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803/getAttachmentInfos';
    var result = new XML(requestBPS(endPoint, soapAction, BPSSessionCookie, payload));
    return result;
}
	
%>