/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.22
 * Generated at: 2021-05-20 06:50:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.api;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.axis2.context.ConfigurationContext;
import org.wso2.carbon.CarbonConstants;
import org.wso2.carbon.rest.api.stub.types.carbon.APIData;
import org.wso2.carbon.rest.api.stub.types.carbon.ResourceData;
import org.wso2.carbon.rest.api.ui.client.RestApiAdminClient;
import org.wso2.carbon.ui.CarbonUIMessage;
import org.wso2.carbon.ui.CarbonUIUtil;
import org.wso2.carbon.utils.ServerConstants;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.ResourceBundle;
import org.owasp.encoder.Encode;

public final class manageAPI_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tlds/carbontags.tld", Long.valueOf(1574397812000L));
    _jspx_dependants.put("/WEB-INF/tlds/fmt.tld", Long.valueOf(1574397812000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.wso2.carbon.rest.api.ui.client.RestApiAdminClient");
    _jspx_imports_classes.add("java.util.Arrays");
    _jspx_imports_classes.add("org.apache.axis2.context.ConfigurationContext");
    _jspx_imports_classes.add("org.wso2.carbon.ui.CarbonUIUtil");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("org.owasp.encoder.Encode");
    _jspx_imports_classes.add("java.util.ResourceBundle");
    _jspx_imports_classes.add("org.wso2.carbon.rest.api.stub.types.carbon.APIData");
    _jspx_imports_classes.add("org.wso2.carbon.rest.api.stub.types.carbon.ResourceData");
    _jspx_imports_classes.add("org.wso2.carbon.ui.CarbonUIMessage");
    _jspx_imports_classes.add("org.wso2.carbon.utils.ServerConstants");
    _jspx_imports_classes.add("org.wso2.carbon.CarbonConstants");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fcarbon_005fjsi18n_0026_005fresourceBundle_005frequest_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fcarbon_005fjsi18n_0026_005fresourceBundle_005frequest_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.release();
    _005fjspx_005ftagPool_005fcarbon_005fjsi18n_0026_005fresourceBundle_005frequest_005fnobody.release();
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link type=\"text/css\" rel=\"stylesheet\" href=\"css/style.css\"/>\r\n");
      out.write("<link type=\"text/css\" rel=\"stylesheet\" href=\"css/menu.css\"/>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../resources/resources-i18n-ajaxprocessor.jsp", out, false);
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"../yui/build/yahoo-dom-event/yahoo-dom-event.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../yui/build/container/container_core-min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../yui/build/yahoo/yahoo-min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../yui/build/event/event-min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../yui/build/connection/connection-min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../yui/build/menu/menu-min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../resources/js/resource_util.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../ajax/js/prototype.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../sequences/js/registry-browser.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/api-util.js\"></script>\r\n");
      out.write("\r\n");
      //  fmt:bundle
      org.apache.taglibs.standard.tag.rt.fmt.BundleTag _jspx_th_fmt_005fbundle_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.BundleTag) _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.get(org.apache.taglibs.standard.tag.rt.fmt.BundleTag.class);
      boolean _jspx_th_fmt_005fbundle_005f0_reused = false;
      try {
        _jspx_th_fmt_005fbundle_005f0.setPageContext(_jspx_page_context);
        _jspx_th_fmt_005fbundle_005f0.setParent(null);
        // /api/manageAPI.jsp(49,0) name = basename type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_fmt_005fbundle_005f0.setBasename("org.wso2.carbon.rest.api.ui.i18n.Resources");
        int _jspx_eval_fmt_005fbundle_005f0 = _jspx_th_fmt_005fbundle_005f0.doStartTag();
        if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_fmt_005fbundle_005f0);
          }
          do {
            out.write('\r');
            out.write('\n');
            //  carbon:jsi18n
            org.wso2.carbon.ui.taglibs.JSi18n _jspx_th_carbon_005fjsi18n_005f0 = (org.wso2.carbon.ui.taglibs.JSi18n) _005fjspx_005ftagPool_005fcarbon_005fjsi18n_0026_005fresourceBundle_005frequest_005fnobody.get(org.wso2.carbon.ui.taglibs.JSi18n.class);
            boolean _jspx_th_carbon_005fjsi18n_005f0_reused = false;
            try {
              _jspx_th_carbon_005fjsi18n_005f0.setPageContext(_jspx_page_context);
              _jspx_th_carbon_005fjsi18n_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
              // /api/manageAPI.jsp(50,0) name = resourceBundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fjsi18n_005f0.setResourceBundle("org.wso2.carbon.rest.api.ui.i18n.Resources");
              // /api/manageAPI.jsp(50,0) name = request type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fjsi18n_005f0.setRequest(request);
              int _jspx_eval_carbon_005fjsi18n_005f0 = _jspx_th_carbon_005fjsi18n_005f0.doStartTag();
              if (_jspx_th_carbon_005fjsi18n_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fcarbon_005fjsi18n_0026_005fresourceBundle_005frequest_005fnobody.reuse(_jspx_th_carbon_005fjsi18n_005f0);
              _jspx_th_carbon_005fjsi18n_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_carbon_005fjsi18n_005f0, _jsp_getInstanceManager(), _jspx_th_carbon_005fjsi18n_005f0_reused);
            }
            out.write('\r');
            out.write('\n');
            //  carbon:breadcrumb
            org.wso2.carbon.ui.taglibs.Breadcrumb _jspx_th_carbon_005fbreadcrumb_005f0 = (org.wso2.carbon.ui.taglibs.Breadcrumb) _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.get(org.wso2.carbon.ui.taglibs.Breadcrumb.class);
            boolean _jspx_th_carbon_005fbreadcrumb_005f0_reused = false;
            try {
              _jspx_th_carbon_005fbreadcrumb_005f0.setPageContext(_jspx_page_context);
              _jspx_th_carbon_005fbreadcrumb_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
              // /api/manageAPI.jsp(53,0) name = label type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setLabel("manage.api");
              // /api/manageAPI.jsp(53,0) name = resourceBundle type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setResourceBundle("org.wso2.carbon.rest.api.ui.i18n.Resources");
              // /api/manageAPI.jsp(53,0) name = topPage type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setTopPage(false);
              // /api/manageAPI.jsp(53,0) name = request type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_carbon_005fbreadcrumb_005f0.setRequest(request);
              int _jspx_eval_carbon_005fbreadcrumb_005f0 = _jspx_th_carbon_005fbreadcrumb_005f0.doStartTag();
              if (_jspx_th_carbon_005fbreadcrumb_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.reuse(_jspx_th_carbon_005fbreadcrumb_005f0);
              _jspx_th_carbon_005fbreadcrumb_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_carbon_005fbreadcrumb_005f0, _jsp_getInstanceManager(), _jspx_th_carbon_005fbreadcrumb_005f0_reused);
            }
            out.write("\r\n");
            out.write("\r\n");

    ResourceBundle bundle = ResourceBundle.getBundle(
            "org.wso2.carbon.rest.api.ui.i18n.Resources",
            request.getLocale());
    String url = CarbonUIUtil.getServerURL(this.getServletConfig()
                                                   .getServletContext(), session);
    ConfigurationContext configContext = (ConfigurationContext) config
            .getServletContext().getAttribute(
                    CarbonConstants.CONFIGURATION_CONTEXT);
    String cookie = (String) session
            .getAttribute(ServerConstants.ADMIN_SERVICE_COOKIE);
    RestApiAdminClient client = new RestApiAdminClient(
            configContext, url, cookie, bundle.getLocale());

    String mode = request.getParameter("mode");
    boolean isGenerateMode = "generate".equals(mode);
    boolean isGeneratedUpdateMode = "generatedUpdate".equals(mode);
    boolean isAddAPIMode = "add".equals(mode);
    boolean isGenerateQueryMode = false;
    String disableInput = "";
    if (isGenerateMode || isGeneratedUpdateMode) {
        isGenerateQueryMode = true;
        //Disable some inputs in API generation (from swagger)
        disableInput = "disabled";
    }

    boolean fromSourceView = session.getAttribute("fromSourceView") != null;
    session.removeAttribute("fromSourceView");

    boolean fromResourceSourceView = session.getAttribute("fromResourceSourceView") != null;
    session.removeAttribute("fromResourceSourceView");

    boolean fromApiDataSourceView = session.getAttribute("fromApiDataSourceView") != null;
    session.removeAttribute("fromApiDataSourceView");

    //clear resource, which added from sequence editor
    session.removeAttribute("resource");

    String apiName = "";
    String apiContext = "";
    String filename = "";
    String hostname = "";
    String port = "";
    String version;
    String versionType;
    String swaggerDefKey = "";
    String swaggerDefURI = "";
    String modeQuery = "";
    String publishSwaggerType = "reg";

    APIData apiData = null;

    List<ResourceData> resourceList;
    session.removeAttribute("mode");
    session.setAttribute("mode", mode);
    if ("edit".equals(mode) || isGeneratedUpdateMode) {
        //To apply changes that might have been made in the source view
        apiData = session.getAttribute("apiData") != null ? (APIData) session
					.getAttribute("apiData") : null;

			if (apiData == null) {
				apiName = request.getParameter("apiName");
				try {
					apiData = client.getApiByName(apiName);
				} catch (Exception e) {
					String msg = "Unable to get API data: "
							+ e.getMessage();
					CarbonUIMessage.sendCarbonUIMessage(msg,
							CarbonUIMessage.ERROR, request);
				}
			// restrict previous API data load for new API request
			} else if (apiData.getName() == null || !apiData.getName().equals(
					request.getParameter("apiName"))) {

				apiName = request.getParameter("apiName");
				// remove previous session API data with the end-point data
				session.removeAttribute("anonEpXML");
				session.removeAttribute("apiData");

				try {
					apiData = client.getApiByName(apiName);
				} catch (Exception e) {
					String msg = "Unable to get API data: "
							+ e.getMessage();
					CarbonUIMessage.sendCarbonUIMessage(msg,
							CarbonUIMessage.ERROR, request);
				}

			} else {
				apiName = apiData.getName();
				//if page loaded from API List view, new APIData should be loaded again.
				// but should not reload if applying swagger generated updates (isGeneratedUpdateMode)
				if (!fromSourceView && !fromResourceSourceView && !isGeneratedUpdateMode) {
                    try {
                        apiData = client.getApiByName(apiName);
                    } catch (Exception e) {
                        String msg = "Unable to get API data: "
                                + e.getMessage();
                        CarbonUIMessage.sendCarbonUIMessage(msg,
                                CarbonUIMessage.ERROR, request);
                    }
                }
			}

        apiContext = apiData.getContext();
        //If api context contains a preceding '/'
        if (apiContext.startsWith("/")) {
            //Remove preceding '/' for displaying
            apiContext = apiContext.substring(1);
        }
        filename = apiData.getFileName();
        port = String.valueOf(apiData.getPort() != -1 ? apiData.getPort() : "");
        hostname = apiData.getHost() != null ? apiData.getHost() : "";
        version = apiData.getVersion() != null ? apiData.getVersion() : "";
        versionType = apiData.getVersionType() != null ? apiData.getVersionType() : "";

        String swaggerResource = apiData.getSwaggerDefKey() != null ? apiData.getSwaggerDefKey() : "";
        publishSwaggerType = swaggerResource.startsWith("file:") ? "file" : "reg";
        if (publishSwaggerType.equals("file")) {
            swaggerDefURI = swaggerResource;
        } else {
            swaggerDefKey = swaggerResource;
        }

        if (fromResourceSourceView) {
        	hostname = request.getParameter("hostname");
        	port = request.getParameter("port");
        }
        
        if (apiData.getResources() != null) {
            resourceList = new ArrayList<ResourceData>(Arrays.asList(apiData.getResources()));
        } else {
            resourceList = new ArrayList<ResourceData>();
        }
    }
    //If not in edit mode, we are adding an API
    else {
        //To apply changes that might have been made in the source view
        if (fromSourceView || fromResourceSourceView) {
            apiData = (APIData) session.getAttribute("apiData");
            apiName = apiData.getName();
            apiContext = apiData.getContext();
            //If api context contains a preceeding '/'
            if (apiContext.startsWith("/")) {
                //Remove preceeding '/' for displaying
                apiContext = apiContext.substring(1);
            }
            if (apiData.getResources() != null) {
                resourceList = new ArrayList<ResourceData>(Arrays.asList(apiData.getResources()));
            } else {
                resourceList = new ArrayList<ResourceData>();
            }
            //session.removeAttribute("fromSourceView");
        } else {
            if (apiData == null) {
                apiData = new APIData();
                apiData.setPort(-1);
            } else {
            	apiData = (APIData) session.getAttribute("apiData");
            }
            resourceList = new ArrayList<ResourceData>();
        }
        
        port = String.valueOf(apiData.getPort() != -1 ? apiData.getPort() : "");
        hostname = apiData.getHost() != null ? apiData.getHost() : "";
        version = apiData.getVersion() != null ? apiData.getVersion() : "";
        versionType = apiData.getVersionType() != null ? apiData.getVersionType() : "";
        
        if (fromResourceSourceView) {
        	hostname = request.getParameter("hostname");
        	port = request.getParameter("port");
            version = request.getParameter("version");
            versionType = request.getParameter("version");
        }
    }
    String index = (String) session.getAttribute("index");
    int resourceIndex = -2;
    if (index != null) {
        resourceIndex = Integer.parseInt(index);
    }
    session.setAttribute("apiResources", resourceList);
    session.setAttribute("apiData", apiData);

    boolean isResourceUpdatePending = false;
    String rIndex = request.getParameter("resourceIndex");
    if (null != rIndex) {
        isResourceUpdatePending = true;
    }

            out.write("\r\n");
            out.write("\r\n");
            out.write("<script type=\"text/javascript\">\r\n");
            out.write("YAHOO.util.Event.onDOMReady(init);\r\n");
            out.write("\r\n");
            out.write("function init() {\r\n");
if("edit".equals(mode)){
            out.write("\r\n");
            out.write("    document.getElementById(\"apiFileName\").value = \"");
            out.print(filename);
            out.write("\";\r\n");
}
            out.write("\r\n");
            out.write("    buildResourceTree();\r\n");
if (resourceIndex >= -1) {
            out.write("\r\n");
            out.write("    ");
if (!fromApiDataSourceView) {
            out.write("\r\n");
            out.write("        loadResource('");
            out.print(resourceIndex);
            out.write("');\r\n");
            out.write("    ");
}
            out.write('\r');
            out.write('\n');
}
            out.write("\r\n");
            out.write("    // invoking this to enable/disable version textbox at the page load\r\n");
            out.write("    onSelectVersionType();\r\n");
            out.write("    showHidePublishSwaggerOptionsOnLoad();\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function showHidePublishSwaggerOptionsOnLoad() {\r\n");
            out.write("    var publishSwaggerType = '");
            out.print(publishSwaggerType);
            out.write("';\r\n");
            out.write("    if (publishSwaggerType == 'reg') {\r\n");
            out.write("        getElement('publishSwaggerCombo').selectedIndex = 0;\r\n");
            out.write("        showHidePublishSwaggerOptions();\r\n");
            out.write("    } else if (publishSwaggerType == 'file') {\r\n");
            out.write("        getElement('publishSwaggerCombo').selectedIndex = 1;\r\n");
            out.write("        showHidePublishSwaggerOptions();\r\n");
            out.write("    }\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function showHidePublishSwaggerOptions() {\r\n");
            out.write("    var index;\r\n");
            out.write("    if ((index = document.getElementById('publishSwaggerCombo').selectedIndex) == 0) {\r\n");
            out.write("        showElem('swagger.reg');\r\n");
            out.write("        hideElem('swagger.file');\r\n");
            out.write("    } else if (index == 1) {\r\n");
            out.write("        showElem('swagger.file');\r\n");
            out.write("        hideElem('swagger.reg');\r\n");
            out.write("    }\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function treeColapse(icon) {\r\n");
            out.write("\r\n");
            out.write("    var parentNode = icon.parentNode;\r\n");
            out.write("    var children = parentNode.childNodes;\r\n");
            out.write("\r\n");
            out.write("    for (var i = 0; i < children.length; i++) {\r\n");
            out.write("        var child = children[i];\r\n");
            out.write("\r\n");
            out.write("        if (child.className == \"branch-node\" || child.className == \"child-list\") {\r\n");
            out.write("            if (child.style.display == \"\") {\r\n");
            out.write("                child.style.display = \"none\";\r\n");
            out.write("                YAHOO.util.Dom.removeClass(icon, \"minus-icon\");\r\n");
            out.write("                YAHOO.util.Dom.addClass(icon, \"plus-icon\");\r\n");
            out.write("            }\r\n");
            out.write("            else if (child.style.display == \"none\") {\r\n");
            out.write("                child.style.display = \"\";\r\n");
            out.write("                YAHOO.util.Dom.removeClass(icon, \"plus-icon\");\r\n");
            out.write("                YAHOO.util.Dom.addClass(icon, \"minus-icon\");\r\n");
            out.write("            }\r\n");
            out.write("        }\r\n");
            out.write("    }\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function buildResourceTree() {\r\n");
            out.write("    jQuery.ajax({\r\n");
            out.write("                    type: \"GET\",\r\n");
            out.write("                    ");
 if(isResourceUpdatePending) { 
            out.write("\r\n");
            out.write("                        url: \"treeBuilder-ajaxprocessor.jsp?updatePending=true");
            out.print( isGenerateQueryMode ? "&mode=generate" : "");
            out.write("\",\r\n");
            out.write("                    ");
 } else { 
            out.write("\r\n");
            out.write("                        url: \"treeBuilder-ajaxprocessor.jsp?updatePending=false");
            out.print( isGenerateQueryMode ? "&mode=generate" : "");
            out.write("\",\r\n");
            out.write("                    ");
 } 
            out.write("\r\n");
            out.write("                    data:  \"data=null\",\r\n");
            out.write("                    success: function(data) {\r\n");
            out.write("                        jQuery(\"#parent\").html(data);\r\n");
            out.write("                    }\r\n");
            out.write("                });\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function addResource() {\r\n");
            out.write("    jQuery.ajax({\r\n");
            out.write("                    type: \"GET\",\r\n");
            out.write("                    url: \"addResource-ajaxprocessor.jsp\",\r\n");
            out.write("                    data:  \"data=null\",\r\n");
            out.write("                    success: function(data) {\r\n");
            out.write("                        jQuery(\"#info\").html(data);\r\n");
            out.write("                    }\r\n");
            out.write("                });\r\n");
            out.write("\r\n");
            out.write("    document.getElementById('resIndex').value = \"-1\";\r\n");
            out.write("    showResourceInfo();\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function loadResource(index, isUpdatePending) {\r\n");
            out.write("    if(isUpdatePending) {\r\n");
            out.write("        CARBON.showConfirmationDialog('");
            if (_jspx_meth_fmt_005fmessage_005f0(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("', function() {\r\n");
            out.write("            jQuery.ajax({\r\n");
            out.write("                      type: \"GET\",\r\n");
            out.write("                      url: \"loadResource-ajaxprocessor.jsp?discardResourceData=true");
            out.print( isGenerateQueryMode ?
                                                                                            "&mode=generate" : "");
            out.write("\",\r\n");
            out.write("                      cache: false,\r\n");
            out.write("                      data: { index:index },\r\n");
            out.write("                      success: function(data) {\r\n");
            out.write("                          jQuery(\"#info\").html(data);\r\n");
            out.write("                          jQuery.each(jQuery(\".resources .resource\"), function() { jQuery(this).attr(\"onClick\", \"loadResourceData(this, false)\")});\r\n");
            out.write("                      }\r\n");
            out.write("                  });\r\n");
            out.write("\r\n");
            out.write("            document.getElementById('resIndex').value = index;\r\n");
            out.write("            showResourceInfo();\r\n");
            out.write("        });\r\n");
            out.write("    } else {\r\n");
            out.write("        jQuery.ajax({\r\n");
            out.write("                    type: \"GET\",\r\n");
            out.write("                    url: \"loadResource-ajaxprocessor.jsp");
            out.print( isGenerateQueryMode ? "?mode=generate" : "");
            out.write("\",\r\n");
            out.write("                    cache: false,\r\n");
            out.write("                    data: { index:index },\r\n");
            out.write("                    success: function(data) {\r\n");
            out.write("                        jQuery(\"#info\").html(data);\r\n");
            out.write("                    }\r\n");
            out.write("                });\r\n");
            out.write("\r\n");
            out.write("        document.getElementById('resIndex').value = index;\r\n");
            out.write("        showResourceInfo();\r\n");
            out.write("    }\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function loadResourceData(a, isUpdatePending) {\r\n");
            out.write("\r\n");
            out.write("    var allNodes = document.getElementById(\"parent\").getElementsByTagName(\"*\");\r\n");
            out.write("    for (var i = 0; i < allNodes.length; i++) {\r\n");
            out.write("        if (YAHOO.util.Dom.hasClass(allNodes[i], \"selected-node\")) {\r\n");
            out.write("            YAHOO.util.Dom.removeClass(allNodes[i], \"selected-node\");\r\n");
            out.write("        }\r\n");
            out.write("    }\r\n");
            out.write("    YAHOO.util.Dom.addClass(a, \"selected-node\");\r\n");
            out.write("\r\n");
            out.write("    var parentId = a.parentNode.id;\r\n");
            out.write("    var index = parentId.split('.')[1];\r\n");
            out.write("    loadResource(index, isUpdatePending);\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function getResourceNode(idSuffix) {\r\n");
            out.write("    var html = \"<div id=\\\"branch.\" + idSuffix + \"\\\" class=\\\"branch-node\\\"></div>\";\r\n");
            out.write("    html += \"<ul id=\\\"ul.\" + idSuffix + \"\\\" class=\\\"child-list\\\">\" +\r\n");
            out.write("            \"<li>\" +\r\n");
            out.write("            \"<div class=\\\"dot-icon\\\"></div>\" +\r\n");
            out.write("            \"<div id=\\\"resource.\" + idSuffix + \"\\\" class=\\\"resources\\\">\" +\r\n");
            out.write("            ");
 if (isResourceUpdatePending) { 
            out.write("\r\n");
            out.write("                \"<a class=\\\"resource\\\" onclick=\\\"loadResourceData(this, true)\\\">Resource</a>\" +\r\n");
            out.write("            ");
 } else { 
            out.write("\r\n");
            out.write("                \"<a class=\\\"resource\\\" onclick=\\\"loadResourceData(this, false)\\\">Resource</a>\" +\r\n");
            out.write("            ");
 } 
            out.write("\r\n");
            out.write("            \"<div style=\\\"width: 100px;\\\" class=\\\"sequenceToolbar\\\">\" +\r\n");
            out.write("            \"<div>\" +\r\n");
            out.write("            \"<a class=\\\"deleteStyle\\\" onclick=\\\"deleteResource(\" + idSuffix + \")\\\">Delete</a>\" +\r\n");
            out.write("            \"</div>\" +\r\n");
            out.write("            \"</div>\" +\r\n");
            out.write("            \"</div>\" +\r\n");
            out.write("            \"</li>\" +\r\n");
            out.write("            \"</ul>\";\r\n");
            out.write("\r\n");
            out.write("    return html;\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function showResourceInfo() {\r\n");
            out.write("    //Show hidden form\r\n");
            out.write("    document.getElementById('resourceInfo').style.display = '';\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function hideResourceInfo() {\r\n");
            out.write("    //Hide form.\r\n");
            out.write("    document.getElementById('resourceInfo').style.display = 'none';\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function urlStyleChanged() {\r\n");
            out.write("    var urlStyle = document.getElementById('urlStyle');\r\n");
            out.write("    var newValue = urlStyle.value;\r\n");
            out.write("\r\n");
            out.write("    if (newValue == 'none') {\r\n");
            out.write("        document.getElementById('urlRow').style.display = 'none';\r\n");
            out.write("    }\r\n");
            out.write("    else {\r\n");
            out.write("        document.getElementById('urlRow').style.display = '';\r\n");
            out.write("        if (newValue == 'uritemplate') {\r\n");
            out.write("            document.getElementById('uriTL').style.display = '';\r\n");
            out.write("            document.getElementById('urlML').style.display = 'none';\r\n");
            out.write("        }\r\n");
            out.write("        else if (newValue == 'urlmapping') {\r\n");
            out.write("            document.getElementById('urlML').style.display = '';\r\n");
            out.write("            document.getElementById('uriTL').style.display = 'none';\r\n");
            out.write("        }\r\n");
            out.write("    }\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function getElement(id) {\r\n");
            out.write("    return document.getElementById(id);\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function seqIsNone(name) {\r\n");
            out.write("    return document.getElementById(name + 'SeqOpNone').checked;\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function seqIsDefinedInline(name) {\r\n");
            out.write("    return document.getElementById(name + 'SeqOpAnon').checked\r\n");
            out.write("            && (getElement(name + 'AnonAddEdit').innerHTML != '");
            if (_jspx_meth_fmt_005fmessage_005f1(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function getSeqDefinedInline(name) {\r\n");
            out.write("    return (getElement(name + 'AnonAddEdit')).value;  // todo\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function seqIsFromRegistry(name) {\r\n");
            out.write("    return document.getElementById(name + 'SeqOpReg').checked && getElement('api.' + name + '.registry')\r\n");
            out.write("            && getElement('api.' + name + '.registry').value != \"\";\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function getSeqFromRegistry(name) {\r\n");
            out.write("    return getElement('api.' + name + '.registry').value;\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function seqIsExistingImport(name) {\r\n");
            out.write("    return document.getElementById(name + 'SeqOpImp').checked && getElement(name + 'ImportSeq').value != 'None';\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function getSeqExistingImport(name) {\r\n");
            out.write("    return getElement(name + 'ImportSeq').value;\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function getSequenceValue(name) {\r\n");
            out.write("    if (seqIsNone(name)) {\r\n");
            out.write("        return \"none\";\r\n");
            out.write("    } else if (seqIsDefinedInline(name)) {\r\n");
            out.write("        return getSeqDefinedInline(name);\r\n");
            out.write("    } else if (seqIsFromRegistry(name)) {\r\n");
            out.write("        return getSeqFromRegistry(name);\r\n");
            out.write("    } else if (seqIsExistingImport(name)) {\r\n");
            out.write("        return getSeqExistingImport(name);\r\n");
            out.write("    }\r\n");
            out.write("    return \"none\";\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function updateResource(v) {\r\n");
            out.write("    var index = document.getElementById('resIndex').value;\r\n");
            out.write("    var methods = \"\";\r\n");
            out.write("    var urlStyle = \"\";\r\n");
            out.write("    var url = \"\";\r\n");
            out.write("    var inSequence = \"\";\r\n");
            out.write("    var outSequence = \"\";\r\n");
            out.write("    var faultSequence = \"\";\r\n");
            out.write("    var apiNameValue = document.getElementById('api.name').value;\r\n");
            out.write("    var apiContextValue = document.getElementById('api.context').value;\r\n");
            out.write("    var apiHostnameValue = document.getElementById('api.hostname').value;\r\n");
            out.write("    var apiPortValue = document.getElementById('api.port').value;\r\n");
            out.write("    var apiNameRegex = /[~!@#$%^&*()\\\\\\/+=\\:;<>'\"?[\\]{}|\\s,]|^$/;\r\n");
            out.write("    var version = document.getElementById('api.version').value;\r\n");
            out.write("    var versionTypeElement = document.getElementById('api.version.type');\r\n");
            out.write("    var versionType = versionTypeElement.options[versionTypeElement.selectedIndex].text;\r\n");
            out.write("\r\n");
            out.write("\r\n");
            out.write("    if (apiNameValue) {\r\n");
            out.write("        var splittedName = apiNameValue.split(\":\");\r\n");
            out.write("        if (splittedName.length == 2) {\r\n");
            out.write("            if (apiNameRegex.test(splittedName[0]) || apiNameRegex.test(splittedName[1])) {\r\n");
            out.write("                CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f2(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\r\n");
            out.write("                return false;\r\n");
            out.write("            }\r\n");
            out.write("        } else if (apiNameRegex.test(apiNameValue)) {\r\n");
            out.write("            CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f3(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\r\n");
            out.write("            return false;\r\n");
            out.write("        }\r\n");
            out.write("    }\r\n");
            out.write("    var methodList = document.apiForm.methods;\r\n");
            out.write("    var isTemp;\r\n");
            out.write("    if (v) {\r\n");
            out.write("        isTemp = v;\r\n");
            out.write("    }\r\n");
            out.write("    var i;\r\n");
            out.write("    for (i = 0; i < methodList.length; i++) {\r\n");
            out.write("        //If method is checked.\r\n");
            out.write("        if (methodList[i].checked) {\r\n");
            out.write("            //If methods exist, append comma to the start of the next method.\r\n");
            out.write("            if (methods != \"\") {\r\n");
            out.write("                methods += \",\" + methodList[i].value;\r\n");
            out.write("            }\r\n");
            out.write("            else {\r\n");
            out.write("                methods += methodList[i].value;\r\n");
            out.write("            }\r\n");
            out.write("        }\r\n");
            out.write("    }\r\n");
            out.write("    if (methods == \"\") {\r\n");
            out.write("        CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f4(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\r\n");
            out.write("        return false;\r\n");
            out.write("    }\r\n");
            out.write("\r\n");
            out.write("    var styleElement = document.getElementById('urlStyle');\r\n");
            out.write("    urlStyle = styleElement.options[styleElement.selectedIndex].value;\r\n");
            out.write("\r\n");
            out.write("    var urlElement = document.getElementById('urlValue');\r\n");
            out.write("    if (urlElement != null) {\r\n");
            out.write("        url = urlElement.value;\r\n");
            out.write("    }\r\n");
            out.write("\r\n");
            out.write("    inSequence = getSequenceValue('in');\r\n");
            out.write("    var inSeqIsInline = seqIsDefinedInline('in');\r\n");
            out.write("\r\n");
            out.write("    outSequence = getSequenceValue('out');\r\n");
            out.write("    var outSeqIsInline = seqIsDefinedInline('out');\r\n");
            out.write("\r\n");
            out.write("    faultSequence = getSequenceValue('fault');\r\n");
            out.write("    var faultSeqIsInline = seqIsDefinedInline('fault');\r\n");
            out.write("    jQuery.ajax({\r\n");
            out.write("                    type: \"POST\",\r\n");
            out.write("                    url: \"updateResource-ajaxprocessor.jsp\",\r\n");
            out.write("                    async: false,\r\n");
            out.write("                    data: { apiName:apiNameValue, apiContext:apiContextValue,apiHostname:apiHostnameValue, apiPort:apiPortValue,\r\n");
            out.write("                        index:index, methods:methods, urlStyle:urlStyle, url:url,\r\n");
            out.write("                        inSequence:inSequence, outSequence:outSequence, faultSequence:faultSequence,\r\n");
            out.write("                        isSeqIsInline:inSeqIsInline, outSeqIsInline:outSeqIsInline, faultSeqIsInline:faultSeqIsInline,\r\n");
            out.write("                        isTemp:isTemp, version:version, versionType:versionType},\r\n");
            out.write("                    success: function(data) {\r\n");
            out.write("                        hideResourceInfo();\r\n");
            out.write("                        //we are adding a new resource.\r\n");
            out.write("                        if (index == -1) {\r\n");
            out.write("                            //Add a new node to the resource tree.\r\n");
            out.write("                        ");

                        resourceList = (ArrayList<ResourceData>)session.getAttribute("apiResources");
                        
            out.write("\r\n");
            out.write("                            document.getElementById(\"resourceSizeVar\").innerHTML = data;\r\n");
            out.write("                            var tempsize = document.getElementById(\"resourcesSize\");\r\n");
            out.write("                            if(tempsize) {\r\n");
            out.write("                                size = tempsize.value;\r\n");
            out.write("                            } else {\r\n");
            out.write("                                size = 0;\r\n");
            out.write("                            }\r\n");
            out.write("                            var parentNode = document.getElementById(\"parent\");\r\n");
            out.write("                            var innerHtml = parentNode.innerHTML;\r\n");
            out.write("                            innerHtml += getResourceNode(size-1);\r\n");
            out.write("                            parentNode.innerHTML = innerHtml;\r\n");
            out.write("                        }\r\n");
            out.write("                        jQuery.each(jQuery(\".resources .resource\"), function() { jQuery(this).attr(\"onClick\", \"loadResourceData(this, false)\")});\r\n");
            out.write("                    },\r\n");
            out.write("                    error:function() {\r\n");
            out.write("                        if (v == null) {\r\n");
            out.write("                            CARBON.showErrorDialog(\"");
            if (_jspx_meth_fmt_005fmessage_005f5(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(" \");\r\n");
            out.write("                            return false;\r\n");
            out.write("                        }\r\n");
            out.write("                    }\r\n");
            out.write("                });\r\n");
            out.write("    return true;\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function saveApi(apiNameValue, apiContextValue, hostname, port, version, versionType) {\r\n");
            out.write("    var apiFileName = document.getElementById(\"apiFileName\").value;\r\n");
            out.write("\r\n");
            out.write("    var swaggerDefKey = \"\";\r\n");
            out.write("    if (document.getElementById('publishSwaggerCombo').selectedIndex == 0) {\r\n");
            out.write("        swaggerDefKey = document.getElementById(\"swaggerDefKey\").value;\r\n");
            out.write("    } else {\r\n");
            out.write("        swaggerDefKey = document.getElementById(\"swaggerUriText\").value;\r\n");
            out.write("        if (swaggerDefKey.indexOf(\"file:\") == -1) {\r\n");
            out.write("            swaggerDefKey = \"file:\".concat(swaggerDefKey);\r\n");
            out.write("        }\r\n");
            out.write("    }\r\n");
            out.write("    apiContextValue = \"/\" + apiContextValue;\r\n");

    resourceList =
            (ArrayList<ResourceData>)session.getAttribute("apiResources");


        
            out.write('\r');
            out.write('\n');
 if("add".equals(mode) || isGenerateMode){ 
            out.write("\r\n");
            out.write("    jQuery.ajax({\r\n");
            out.write("                    type: \"POST\",\r\n");
            out.write("                    url: \"addapi-ajaxprocessor.jsp\",\r\n");
            out.write("                    data: {\r\n");
            out.write("                            apiName:apiNameValue,\r\n");
            out.write("                            apiContext:apiContextValue,\r\n");
            out.write("                            hostname:hostname,\r\n");
            out.write("                            port:port,\r\n");
            out.write("                            version:version,\r\n");
            out.write("                            versionType:versionType,\r\n");
            out.write("                            swaggerDefKey:swaggerDefKey\r\n");
            out.write("                          },\r\n");
            out.write("                    success: function(data) {\r\n");
            out.write("                        CARBON.showInfoDialog(\"");
            if (_jspx_meth_fmt_005fmessage_005f6(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(" \", function() {\r\n");
            out.write("                            document.location.href = \"index.jsp\";\r\n");
            out.write("                        });\r\n");
            out.write("                    },\r\n");
            out.write("                    error:function(status) {\r\n");
            out.write("                        if (status.status == '452') {\r\n");
            out.write("                            CARBON.showErrorDialog(\"");
            if (_jspx_meth_fmt_005fmessage_005f7(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(" : \" + apiNameValue);\r\n");
            out.write("                        } else if (status.status == '453') {\r\n");
            out.write("                            CARBON.showErrorDialog(\"");
            if (_jspx_meth_fmt_005fmessage_005f8(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(" : \" + apiContextValue);\r\n");
            out.write("                        } else if(status.status == '454'){\r\n");
            out.write("                        \tCARBON.showErrorDialog(\"");
            if (_jspx_meth_fmt_005fmessage_005f9(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\");\r\n");
            out.write("                        }\r\n");
            out.write("                    }\r\n");
            out.write("                });\r\n");
            out.write("\r\n");
 } else if("edit".equals(mode) || isGeneratedUpdateMode) { 
            out.write("\r\n");
            out.write("    jQuery.ajax({\r\n");
            out.write("                    type: \"POST\",\r\n");
            out.write("                    url: \"editapi-ajaxprocessor.jsp");
            out.print( isGeneratedUpdateMode ? ("?mode=" + mode) : "");
            out.write("\",\r\n");
            out.write("                    data: {\r\n");
            out.write("                            apiName:apiNameValue,\r\n");
            out.write("                            apiContext:apiContextValue,\r\n");
            out.write("                            filename:apiFileName,\r\n");
            out.write("                            hostname:hostname,\r\n");
            out.write("                            port:port,\r\n");
            out.write("                            version:version,\r\n");
            out.write("                            versionType:versionType,\r\n");
            out.write("                            swaggerDefKey:swaggerDefKey\r\n");
            out.write("                          },\r\n");
            out.write("                    success: function(data) {\r\n");
            out.write("                        CARBON.showInfoDialog(\"");
            if (_jspx_meth_fmt_005fmessage_005f10(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(" \", function() {\r\n");
            out.write("                            document.location.href = \"index.jsp\";\r\n");
            out.write("                        });\r\n");
            out.write("                    },\r\n");
            out.write("                    error:function(status) {\r\n");
            out.write("                    \tif (status.status == '453'){\r\n");
            out.write("                    \t\tCARBON.showErrorDialog(\"");
            if (_jspx_meth_fmt_005fmessage_005f11(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(" : \" + apiContextValue);\r\n");
            out.write("                    \t} else if(status.status == '454'){\r\n");
            out.write("                        \tCARBON.showErrorDialog(\"");
            if (_jspx_meth_fmt_005fmessage_005f12(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\");\r\n");
            out.write("                        }\r\n");
            out.write("                    }\r\n");
            out.write("                });\r\n");
 } 
            out.write("\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function validateAndSaveApi() {\r\n");
            out.write("    var apiNameValue = document.getElementById('api.name').value;\r\n");
            out.write("    var apiContextValue = document.getElementById('api.context').value;\r\n");
            out.write("    var hostname = document.getElementById('api.hostname').value;\r\n");
            out.write("    var port = document.getElementById('api.port').value;\r\n");
            out.write("    var version = document.getElementById('api.version').value;\r\n");
            out.write("    var versionTypeElement = document.getElementById('api.version.type');\r\n");
            out.write("    var versionType = versionTypeElement.options[versionTypeElement.selectedIndex].text;\r\n");
            out.write("    apiNameValue = apiNameValue.split(\":\")[0];\r\n");
            out.write("    var apiNameRegex = /[~!@#$%^&*()\\\\\\/+=\\:;<>'\"?[\\]{}|\\s,]|^$/;\r\n");
            out.write("\r\n");
            out.write("    if (apiNameValue == null || apiNameRegex.test(apiNameValue)) {\r\n");
            out.write("        CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f13(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\r\n");
            out.write("        return false;\r\n");
            out.write("    }\r\n");
            out.write("    else if (apiNameValue.indexOf(' ')>=0) {\r\n");
            out.write("        CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f14(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\r\n");
            out.write("        return false;\r\n");
            out.write("    }\r\n");
            out.write("    else if (apiContextValue == null || apiContextValue == \"\") {\r\n");
            out.write("        CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f15(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\r\n");
            out.write("        return false;\r\n");
            out.write("    }\r\n");
            out.write("    else if (apiContextValue.indexOf(' ')>=0) {\r\n");
            out.write("        CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f16(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\r\n");
            out.write("        return false;\r\n");
            out.write("    }\r\n");
            out.write("    else if (port != null && port != \"\") {\r\n");
            out.write("        if (!(/^\\d{1,5}([ ]\\d{1,5})*$/).test(port)) {\r\n");
            out.write("            CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f17(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\r\n");
            out.write("            return false;\r\n");
            out.write("        }\r\n");
            out.write("    }\r\n");
            out.write("    else if (versionType == \"context\" || versionType == \"url\") {\r\n");
            out.write("        if (version == null || version == \"\") {\r\n");
            out.write("            CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f18(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\r\n");
            out.write("            return false;\r\n");
            out.write("        }\r\n");
            out.write("    }\r\n");
            out.write("    else if (apiNameValue) {\r\n");
            out.write("        var splittedName = apiNameValue.split(\":\");\r\n");
            out.write("        if (splittedName.length == 2) {\r\n");
            out.write("            if (apiNameRegex.test(splittedName[0]) || apiNameRegex.test(splittedName[1])) {\r\n");
            out.write("                CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f19(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\r\n");
            out.write("                return false;\r\n");
            out.write("            }\r\n");
            out.write("        } else if (apiNameRegex.test(apiNameValue)) {\r\n");
            out.write("            CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f20(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\r\n");
            out.write("            return false;\r\n");
            out.write("        }\r\n");
            out.write("    }\r\n");
            out.write("\r\n");
            out.write("    jQuery.ajax({\r\n");
            out.write("                    type: \"POST\",\r\n");
            out.write("                    url: \"validateResources-ajaxprocessor.jsp\",\r\n");
            out.write("                    data: \"data=null\" ,\r\n");
            out.write("                    success:function() {\r\n");
            out.write("                        return saveApi(apiNameValue, apiContextValue, hostname, port, version, versionType);\r\n");
            out.write("                    },\r\n");
            out.write("                    error:function() {\r\n");
            out.write("                        CARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f21(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\r\n");
            out.write("                    }\r\n");
            out.write("                });\r\n");


            out.write("\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function deleteResource(index) {\r\n");
            out.write("\r\n");
            out.write("    CARBON.showConfirmationDialog(\"");
            if (_jspx_meth_fmt_005fmessage_005f22(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(" \", function() {\r\n");
            out.write("\r\n");
            out.write("        jQuery.ajax({\r\n");
            out.write("                        type: \"POST\",\r\n");
            out.write("                        url: \"deleteResource-ajaxprocessor.jsp\",\r\n");
            out.write("                        data: { index:index },\r\n");
            out.write("                        success: function(data) {\r\n");
            out.write("                            //build whole tree to assign new ids.\r\n");
            out.write("                            buildResourceTree();\r\n");
            out.write("                            hideResourceInfo();\r\n");
            out.write("                        }\r\n");
            out.write("                    });\r\n");
            out.write("    });\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function cancelSave() {\r\n");
            out.write("    jQuery.ajax({\r\n");
            out.write("                    type: \"POST\",\r\n");
            out.write("                    url: \"cancel-ajaxprocessor.jsp\",\r\n");
            out.write("                    success: function() {\r\n");
            out.write("                        document.location.href = \"index.jsp\";\r\n");
            out.write("                    }\r\n");
            out.write("                });\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function resourceSourceView() {\r\n");
            out.write("    var index = document.getElementById('resIndex').value;\r\n");
            out.write("    var apiNameValue = document.getElementById('api.name').value;\r\n");
            out.write("    var apiContextValue = \"/\" + document.getElementById('api.context').value;\r\n");
            out.write("    var hostname = document.getElementById('api.hostname').value;\r\n");
            out.write("    var port = document.getElementById('api.port').value;\r\n");
            out.write("    var version = document.getElementById('api.version').value;\r\n");
            out.write("    var versionTypeElement = document.getElementById('api.version.type');\r\n");
            out.write("    var versionType = versionTypeElement.options[versionTypeElement.selectedIndex].text;\r\n");
            out.write("    apiNameValue = apiNameValue.split(\":\")[0];\r\n");
            out.write("    \r\n");
            out.write("    if (port != null && port != \"\") {\r\n");
            out.write("    \tif (!(/^\\d{1,5}([ ]\\d{1,5})*$/).test(port)) {\r\n");
            out.write("    \t\tCARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f23(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\r\n");
            out.write("            return false;\r\n");
            out.write("    \t}\r\n");
            out.write("    }\r\n");
            out.write("    if (versionType == \"none\") {\r\n");
            out.write("        versionType = \"\";\r\n");
            out.write("        version = \"\";\r\n");
            out.write("    }\r\n");
            out.write("    \r\n");
            out.write("    var result = updateResource(\"true\");\r\n");
            out.write("    if (result != false) {\r\n");
            out.write("        document.location.href = \"sourceView_resource.jsp?ordinal=1&mode=\" + \"");
            out.print(Encode.forHtml(mode));
            out.write("\" +\r\n");
            out.write("            \"&apiName=\" + apiNameValue +\r\n");
            out.write("            \"&apiContext=\" + apiContextValue +\r\n");
            out.write("            \"&hostname=\" + hostname +\r\n");
            out.write("            \"&port=\" + port +\r\n");
            out.write("            \"&index=\" + index +\r\n");
            out.write("            \"&version=\" + version +\r\n");
            out.write("            \"&versionType=\" + versionType;\r\n");
            out.write("        goBack(1);\r\n");
            out.write("\r\n");
            out.write("    }\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function sourceView() {\r\n");
            out.write("    var apiNameValue = document.getElementById('api.name').value;\r\n");
            out.write("    var apiContextValue = \"/\" + document.getElementById('api.context').value;\r\n");
            out.write("    var hostname = document.getElementById('api.hostname').value;\r\n");
            out.write("    var port = document.getElementById('api.port').value;\r\n");
            out.write("    var version = document.getElementById('api.version').value;\r\n");
            out.write("    var versionTypeElement = document.getElementById('api.version.type');\r\n");
            out.write("    var versionType = versionTypeElement.options[versionTypeElement.selectedIndex].text;\r\n");
            out.write("    apiNameValue = apiNameValue.split(\":\")[0];\r\n");
            out.write("\r\n");
            out.write("    if (versionType == \"none\") {\r\n");
            out.write("        versionType = \"\";\r\n");
            out.write("        version = \"\";\r\n");
            out.write("    }\r\n");
            out.write("    \r\n");
            out.write("    if (port != null && port != \"\") {\r\n");
            out.write("    \tif (!(/^\\d{1,5}([ ]\\d{1,5})*$/).test(port)) {\r\n");
            out.write("    \t\tCARBON.showWarningDialog('");
            if (_jspx_meth_fmt_005fmessage_005f24(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("');\r\n");
            out.write("            return false;\r\n");
            out.write("    \t}\r\n");
            out.write("    }\r\n");
            out.write("\r\n");
            out.write("    var swaggerDefKey = \"\";\r\n");
            out.write("    if (document.getElementById('publishSwaggerCombo').selectedIndex == 0) {\r\n");
            out.write("        swaggerDefKey = document.getElementById(\"swaggerDefKey\").value;\r\n");
            out.write("    } else {\r\n");
            out.write("        swaggerDefKey = document.getElementById(\"swaggerUriText\").value;\r\n");
            out.write("        if (swaggerDefKey.indexOf(\"file:\") == -1) {\r\n");
            out.write("            swaggerDefKey = \"file:\".concat(swaggerDefKey);\r\n");
            out.write("        }\r\n");
            out.write("    }\r\n");
            out.write("\r\n");
            out.write("    ");
 if(isGenerateMode) { 
            out.write("\r\n");
            out.write("    document.location.href = \"generateAPIWizard2.jsp?\" +\r\n");
            out.write("        \"apiName=\" + apiNameValue +\r\n");
            out.write("        \"&apiContext=\" + apiContextValue +\r\n");
            out.write("        \"&hostname=\" + hostname +\r\n");
            out.write("        \"&port=\" + port +\r\n");
            out.write("        \"&version=\" + version +\r\n");
            out.write("        \"&versionType=\" + versionType +\r\n");
            out.write("        \"&swaggerDefKey=\" + swaggerDefKey;\r\n");
            out.write("\r\n");
            out.write("    ");
 } else { 
            out.write("\r\n");
            out.write("    document.location.href = \"sourceview_api.jsp?ordinal=1&mode=\" + \"");
            out.print(Encode.forHtml(mode));
            out.write("\" +\r\n");
            out.write("        \"&apiName=\" + apiNameValue +\r\n");
            out.write("        \"&apiContext=\" + apiContextValue +\r\n");
            out.write("        \"&hostname=\" + hostname +\r\n");
            out.write("        \"&port=\" + port +\r\n");
            out.write("        \"&version=\" + version +\r\n");
            out.write("        \"&versionType=\" + versionType +\r\n");
            out.write("        \"&swaggerDefKey=\" + swaggerDefKey;\r\n");
            out.write("    ");
 } 
            out.write("\r\n");
            out.write("\r\n");
            out.write("    goBack(1);\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function onSelectVersionType() {\r\n");
            out.write("    var version = document.getElementById('api.version');\r\n");
            out.write("    var versionTypeElement = document.getElementById('api.version.type');\r\n");
            out.write("    var versionType = versionTypeElement.options[versionTypeElement.selectedIndex].text;\r\n");
            out.write("    // set editable false if version-type is selected as \"none\"\r\n");
            out.write("    if (versionType == \"none\") {\r\n");
            out.write("        version.readOnly = true;\r\n");
            out.write("        version.value = \"\";\r\n");
            out.write("    } else {\r\n");
            out.write("        version.readOnly = false;\r\n");
            out.write("    }\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function swaggerView() {\r\n");
            out.write("    var apiNameValue = document.getElementById('api.name').value;\r\n");
            out.write("    document.location.href = \"swaggereditor.jsp?\" +\"&apiName=\" + apiNameValue;\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function showElem(id) {\r\n");
            out.write("    document.getElementById(id).style.display = \"\";\r\n");
            out.write("}\r\n");
            out.write("\r\n");
            out.write("function hideElem(id) {\r\n");
            out.write("    document.getElementById(id).style.display = \"none\";\r\n");
            out.write("}\r\n");
            out.write("</script>\r\n");
            out.write("\r\n");
            out.write("\r\n");
            out.write("<div id=\"middle\">\r\n");
            out.write("    <h2>\r\n");
            out.write("    ");
if ("edit".equals(mode) || isGeneratedUpdateMode) {
            out.write("\r\n");
            out.write("        ");
            if (_jspx_meth_fmt_005fmessage_005f25(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("    ");
} else if ("generate".equals(mode)) {
            out.write("\r\n");
            out.write("        ");
            if (_jspx_meth_fmt_005fmessage_005f26(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("    ");
} else {
            out.write("\r\n");
            out.write("        ");
            if (_jspx_meth_fmt_005fmessage_005f27(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("    ");
}
            out.write("\r\n");
            out.write("    </h2>\r\n");
            out.write("\r\n");
            out.write("    <div id=\"workArea\">\r\n");
            out.write("\r\n");
            out.write("        <form id=\"apiForm\" name=\"apiForm\" action=\"\" method=\"POST\">\r\n");
            out.write("            <input type=\"hidden\" id=\"apiConf\" name=\"apiConf\" value=\"\"/>\r\n");
            out.write("\r\n");
            out.write("            <table class=\"styledLeft\" cellspacing=\"0\">\r\n");
            out.write("                <thead>\r\n");
            out.write("                <tr>\r\n");
            out.write("                    <th>\r\n");
            out.write("                \t<span style=\"float: left; position: relative; margin-top: 2px;\">");
            if (_jspx_meth_fmt_005fmessage_005f28(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</span>\r\n");
            out.write("                        <a style=\"background-image:url(images/source-view.gif);\" class=\"icon-link\"\r\n");
            out.write("                           onclick=\"sourceView()\">");
            if (_jspx_meth_fmt_005fmessage_005f29(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("                        </a>\r\n");
            out.write("                    </th>\r\n");
            out.write("                    ");
 if (!(isGenerateMode || isGeneratedUpdateMode || isAddAPIMode)) { 
            out.write("\r\n");
            out.write("                    <th border=\"0\">\r\n");
            out.write("                        <a style=\"background-image:url(images/favicon-16x16.png);\" class=\"icon-link\"\r\n");
            out.write("                           onclick=\"swaggerView()\">");
            if (_jspx_meth_fmt_005fmessage_005f30(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("                        </a>\r\n");
            out.write("                    </th>\r\n");
            out.write("                    ");
 } 
            out.write("\r\n");
            out.write("                </tr>\r\n");
            out.write("                </thead>\r\n");
            out.write("                <tbody>\r\n");
            out.write("                <tr >\r\n");
            out.write("                    <td colspan=\"2\">\r\n");
            out.write("                        <table class=\"normal\" width=\"100%\">\r\n");
            out.write("                            <!-- API Name -->\r\n");
            out.write("                            <tr>\r\n");
            out.write("                                <td class=\"leftCol-small\">\r\n");
            out.write("                                    ");
            if (_jspx_meth_fmt_005fmessage_005f31(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(" <span\r\n");
            out.write("                                        class=\"required\">*</span>\r\n");
            out.write("                                </td>\r\n");
            out.write("                                <td>\r\n");
            out.write("                                    <input type=\"text\" id=\"api.name\" value=\"");
            out.print(Encode.forHtmlAttribute(apiName));
            out.write("\"\r\n");
            out.write("                                            ");
if (!"add".equals(mode)) { 
            out.write("\r\n");
            out.write("                                           disabled=\"disabled\" ");
}
            out.write("/>\r\n");
            out.write("                                    <input type=\"hidden\" name=\"apiName\"\r\n");
            out.write("                                           value=\"");
            out.print(Encode.forHtmlAttribute(apiName));
            out.write("\"/>\r\n");
            out.write("                                </td>\r\n");
            out.write("                            </tr>\r\n");
            out.write("                            <!-- API Context Path -->\r\n");
            out.write("                            <tr>\r\n");
            out.write("                                <td class=\"leftCol-small\">\r\n");
            out.write("                                    ");
            if (_jspx_meth_fmt_005fmessage_005f32(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write(" <span\r\n");
            out.write("                                        class=\"required\">*</span>\r\n");
            out.write("                                </td>\r\n");
            out.write("                                <td>\r\n");
            out.write("                                    <div>\r\n");
            out.write("                                        /<input type=\"text\" id=\"api.context\"\r\n");
            out.write("                                                value=\"");
            out.print(apiContext);
            out.write('"');
            out.write(' ');
            out.print(disableInput);
            out.write("/>\r\n");
            out.write("                                    </div>\r\n");
            out.write("                                    <input type=\"hidden\" name=\"apicontext\"\r\n");
            out.write("                                           value=\"");
            out.print(apiContext);
            out.write("\"/>\r\n");
            out.write("                                </td>\r\n");
            out.write("                            </tr>\r\n");
            out.write("                            <!-- API Hostname -->\r\n");
            out.write("                            <tr>\r\n");
            out.write("                                <td class=\"leftCol-small\">\r\n");
            out.write("                                    ");
            if (_jspx_meth_fmt_005fmessage_005f33(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("                                </td>\r\n");
            out.write("                                <td>\r\n");
            out.write("                                    <input type=\"text\" id=\"api.hostname\" value=\"");
            out.print(hostname);
            out.write("\"/>\r\n");
            out.write("                                    <input type=\"hidden\" name=\"api.hostname\" value=\"");
            out.print(hostname);
            out.write("\"/>\r\n");
            out.write("                                </td>\r\n");
            out.write("                            </tr>\r\n");
            out.write("                            <!-- API Port -->\r\n");
            out.write("                            <tr>\r\n");
            out.write("                                <td class=\"leftCol-small\">\r\n");
            out.write("                                    ");
            if (_jspx_meth_fmt_005fmessage_005f34(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("                                </td>\r\n");
            out.write("                                <td>\r\n");
            out.write("                                    <input type=\"text\" id=\"api.port\" value=\"");
            out.print(port);
            out.write("\"/>\r\n");
            out.write("                                    <input type=\"hidden\" name=\"api.port\" value=\"");
            out.print(port);
            out.write("\"/>\r\n");
            out.write("                                </td>\r\n");
            out.write("                            </tr>\r\n");
            out.write("                            <!-- API Version -->\r\n");
            out.write("                            <tr>\r\n");
            out.write("                                <td class=\"leftCol-small\">\r\n");
            out.write("                                    ");
            if (_jspx_meth_fmt_005fmessage_005f35(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("                                </td>\r\n");
            out.write("                                <td>\r\n");
            out.write("                                    <select name=\"build.message\" id=\"api.version.type\" onchange=\"onSelectVersionType()\">\r\n");
            out.write("                                        <option value=\"context\" ");
            out.print( "context".equals(versionType) ?
                                                "selected=\"true\"" : "");
            out.write(">context\r\n");
            out.write("                                        </option>\r\n");
            out.write("                                        <option value=\"url\" ");
            out.print( "url".equals(versionType) ?
                                                "selected=\"true\"" : "");
            out.write(">url\r\n");
            out.write("                                        </option>\r\n");
            out.write("                                        <option value=\"false\" ");
            out.print( (versionType == null || versionType.isEmpty()) ?
                                                "selected=\"true\"" : "");
            out.write(">none\r\n");
            out.write("                                        </option>\r\n");
            out.write("                                    </select>\r\n");
            out.write("                                </td>\r\n");
            out.write("                            </tr>\r\n");
            out.write("                            <tr>\r\n");
            out.write("                                <td class=\"leftCol-small\">\r\n");
            out.write("                                    ");
            if (_jspx_meth_fmt_005fmessage_005f36(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("                                </td>\r\n");
            out.write("                                <td>\r\n");
            out.write("                                    <input type=\"text\" id=\"api.version\" value=\"");
            out.print(version);
            out.write('"');
            out.write(' ');
            out.print(disableInput);
            out.write("/>\r\n");
            out.write("                                    <input type=\"hidden\" name=\"api.version\" value=\"");
            out.print(version);
            out.write("\"/>\r\n");
            out.write("                                </td>\r\n");
            out.write("                            </tr>\r\n");
            out.write("                            <tr>\r\n");
            out.write("                                <td class=\"leftCol-small\">\r\n");
            out.write("                                    ");
            if (_jspx_meth_fmt_005fmessage_005f37(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("                                </td>\r\n");
            out.write("                                <td >\r\n");
            out.write("                                    <select id=\"publishSwaggerCombo\" name=\"publishSwaggerCombo\"\r\n");
            out.write("                                                                            onchange=\"showHidePublishSwaggerOptions();\">\r\n");
            out.write("                                        <option id=\"publishSwaggerReg\" selected=\"selected\" value=\"reg\">\r\n");
            out.write("                                            ");
            if (_jspx_meth_fmt_005fmessage_005f38(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("                                        </option>\r\n");
            out.write("                                        <option id=\"publishSwaggerFile\" value=\"file\">\r\n");
            out.write("                                            ");
            if (_jspx_meth_fmt_005fmessage_005f39(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("                                        </option>\r\n");
            out.write("                                    </select>\r\n");
            out.write("                                </td>\r\n");
            out.write("                            </tr>\r\n");
            out.write("                            <tr id=\"swagger.reg\">\r\n");
            out.write("                                <td></td>\r\n");
            out.write("                                <td>\r\n");
            out.write("                                    ");
            if (_jspx_meth_fmt_005fmessage_005f40(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("<br/>\r\n");
            out.write("                                    <table cellspacing=\"0\">\r\n");
            out.write("                                        <tr>\r\n");
            out.write("                                            <td class=\"nopadding\">\r\n");
            out.write("                                                <input type=\"text\" name=\"swaggerDefKey\" id=\"swaggerDefKey\"\r\n");
            out.write("                                                            value=\"");
            out.print(swaggerDefKey);
            out.write("\" readonly=\"readonly\"/>\r\n");
            out.write("                                    \t\t</td>\r\n");
            out.write("                                            <td class=\"nopadding\">\r\n");
            out.write("                                                <a href=\"#\" class=\"registry-picker-icon-link\" style=\"padding-left:30px\"\r\n");
            out.write("                                                           onclick=\"showRegistryBrowserWithoutLocalEntries('swaggerDefKey','/_system/config');\">\r\n");
            out.write("                                                    ");
            if (_jspx_meth_fmt_005fmessage_005f41(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("                                                </a>\r\n");
            out.write("                                    \t\t</td>\r\n");
            out.write("                                            <td class=\"nopadding\">\r\n");
            out.write("                                                <a href=\"#\" class=\"registry-picker-icon-link\" style=\"padding-left:30px\"\r\n");
            out.write("                                                           onclick=\"showRegistryBrowserWithoutLocalEntries('swaggerDefKey','/_system/governance');\">\r\n");
            out.write("                                                    ");
            if (_jspx_meth_fmt_005fmessage_005f42(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("                                                </a>\r\n");
            out.write("                                            </td>\r\n");
            out.write("                                        </tr>\r\n");
            out.write("                                    </table>\r\n");
            out.write("                                </td>\r\n");
            out.write("                            </tr>\r\n");
            out.write("                            <tr id=\"swagger.file\">\r\n");
            out.write("                                <td></td>\r\n");
            out.write("                                <td >\r\n");
            out.write("                                    ");
            if (_jspx_meth_fmt_005fmessage_005f43(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("<br/>\r\n");
            out.write("                                    <input type=\"text\" name=\"swaggerUriText\" id=\"swaggerUriText\"\r\n");
            out.write("                                                            value=\"");
            out.print(swaggerDefURI);
            out.write("\">\r\n");
            out.write("                                </td>\r\n");
            out.write("                            </tr>\r\n");
            out.write("                            <!-- Resources -->\r\n");
            out.write("                            <tr>\r\n");
            out.write("                                <td colspan=\"3\">\r\n");
            out.write("                                    <div class=\"treePane\" id=\"treePane\"\r\n");
            out.write("                                         style=\"height: 300px; overflow: auto; width: auto; border: 1px solid rgb(204, 204, 204);position:relative;\">\r\n");
            out.write("                                        <div style=\"position:absolute;padding:20px;\">\r\n");
            out.write("                                            <ul class=\"root-list\" id=\"failoverTree\">\r\n");
            out.write("                                                <li id=\"parent\">\r\n");
            out.write("                                                </li>\r\n");
            out.write("                                            </ul>\r\n");
            out.write("                                        </div>\r\n");
            out.write("                                    </div>\r\n");
            out.write("                                </td>\r\n");
            out.write("                            </tr>\r\n");
            out.write("                        </table>\r\n");
            out.write("                        <div id=\"resourceInfo\" style=\"display:none\">\r\n");
            out.write("                            <table class=\"normal\" width=\"100%\">\r\n");
            out.write("                                    ");
            out.write("\r\n");
            out.write("                                <tr>\r\n");
            out.write("                                    <td>\r\n");
            out.write("                                        <table class=\"styledLeft\" cellspacing=\"0\">\r\n");
            out.write("                                            <tr>\r\n");
            out.write("                                                <td class=\"middle-header\">\r\n");
            out.write("                                        <span style=\"float:left;position:relative; margin-top:2px;\">\r\n");
            out.write("                                            ");
            if (_jspx_meth_fmt_005fmessage_005f44(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("</span>\r\n");
            out.write("                                                    <!--a style=\"background-image:url(images/source-view.gif);\"\r\n");
            out.write("                                                       class=\"icon-link\"\r\n");
            out.write("                                                       onclick=\"resourceSourceView()\"\r\n");
            out.write("                                                      >");
            if (_jspx_meth_fmt_005fmessage_005f45(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\r\n");
            out.write("                                                    </a-->\r\n");
            out.write("                                                </td>\r\n");
            out.write("                                            </tr>\r\n");
            out.write("                                            <tr>\r\n");
            out.write("                                                <td style=\"padding: 0px !important;\">\r\n");
            out.write("                                                    <div id=\"info\" class=\"tabPaneContentMain\"\r\n");
            out.write("                                                         style=\"width:auto;padding:0px;\">\r\n");
            out.write("                                                    </div>\r\n");
            out.write("                                                </td>\r\n");
            out.write("                                            </tr>\r\n");
            out.write("                                        </table>\r\n");
            out.write("                                    </td>\r\n");
            out.write("                                </tr>\r\n");
            out.write("                            </table>\r\n");
            out.write("                        </div>\r\n");
            out.write("                        <input type=\"hidden\" id=\"resIndex\" name=\"resIndex\"/>\r\n");
            out.write("                        <input type=\"hidden\" id=\"apiFileName\" name=\"apiFileName\"/>\r\n");
            out.write("                        <div id=\"resourceSizeVar\" name=\"resourceSizeVar\"/>\r\n");
            out.write("                    </td>\r\n");
            out.write("                </tr>\r\n");
            out.write("                <tr>\r\n");
            out.write("                    <td class=\"buttonRow\" colspan=\"2\">\r\n");
            out.write("                        <input type=\"button\" value=\"");
            if (_jspx_meth_fmt_005fmessage_005f46(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"\r\n");
            out.write("                               class=\"button\"\r\n");
            out.write("                               name=\"save\"\r\n");
            out.write("                               onclick=\"validateAndSaveApi()\"/>\r\n");
            out.write("                        <input type=\"button\" value=\"");
            if (_jspx_meth_fmt_005fmessage_005f47(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
              return;
            out.write("\"\r\n");
            out.write("                               name=\"cancel\"\r\n");
            out.write("                               class=\"button\"\r\n");
            out.write("                               onclick=\"cancelSave()\"/>\r\n");
            out.write("                    </td>\r\n");
            out.write("                </tr>\r\n");
            out.write("                </tbody>\r\n");
            out.write("            </table>\r\n");
            out.write("        </form>\r\n");
            out.write("    </div>\r\n");
            out.write("</div>\r\n");
            out.write("\r\n");
            out.write("\r\n");
            int evalDoAfterBody = _jspx_th_fmt_005fbundle_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_fmt_005fbundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.reuse(_jspx_th_fmt_005fbundle_005f0);
        _jspx_th_fmt_005fbundle_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fbundle_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fbundle_005f0_reused);
      }
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f0_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(343,39) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f0.setKey("resource.update.pending");
      int _jspx_eval_fmt_005fmessage_005f0 = _jspx_th_fmt_005fmessage_005f0.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
      _jspx_th_fmt_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f1_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(453,63) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f1.setKey("create");
      int _jspx_eval_fmt_005fmessage_005f1 = _jspx_th_fmt_005fmessage_005f1.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
      _jspx_th_fmt_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f2 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f2_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(512,42) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f2.setKey("api.name.not.valid");
      int _jspx_eval_fmt_005fmessage_005f2 = _jspx_th_fmt_005fmessage_005f2.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
      _jspx_th_fmt_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f3 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f3_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(516,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f3.setKey("api.name.not.valid");
      int _jspx_eval_fmt_005fmessage_005f3 = _jspx_th_fmt_005fmessage_005f3.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
      _jspx_th_fmt_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f4 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f4_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(539,34) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f4.setKey("resource.methods.required");
      int _jspx_eval_fmt_005fmessage_005f4 = _jspx_th_fmt_005fmessage_005f4.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
      _jspx_th_fmt_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f5 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f5_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(592,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f5.setKey("api.update.error.451");
      int _jspx_eval_fmt_005fmessage_005f5 = _jspx_th_fmt_005fmessage_005f5.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
      _jspx_th_fmt_005fmessage_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f6 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f6_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(633,47) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f6.setKey("api.add.success");
      int _jspx_eval_fmt_005fmessage_005f6 = _jspx_th_fmt_005fmessage_005f6.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f6);
      _jspx_th_fmt_005fmessage_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f6, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f7 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f7_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(639,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f7.setKey("api.update.error.452");
      int _jspx_eval_fmt_005fmessage_005f7 = _jspx_th_fmt_005fmessage_005f7.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f7);
      _jspx_th_fmt_005fmessage_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f7, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f8 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f8_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f8.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(641,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f8.setKey("api.update.error.453");
      int _jspx_eval_fmt_005fmessage_005f8 = _jspx_th_fmt_005fmessage_005f8.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f8);
      _jspx_th_fmt_005fmessage_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f8, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f9(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f9 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f9_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f9.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(643,49) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f9.setKey("api.update.error.454");
      int _jspx_eval_fmt_005fmessage_005f9 = _jspx_th_fmt_005fmessage_005f9.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f9);
      _jspx_th_fmt_005fmessage_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f9, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f10(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f10 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f10_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f10.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f10.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(663,47) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f10.setKey("api.update.success");
      int _jspx_eval_fmt_005fmessage_005f10 = _jspx_th_fmt_005fmessage_005f10.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f10);
      _jspx_th_fmt_005fmessage_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f10, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f11(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f11 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f11_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f11.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(669,46) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f11.setKey("api.update.error.453");
      int _jspx_eval_fmt_005fmessage_005f11 = _jspx_th_fmt_005fmessage_005f11.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f11);
      _jspx_th_fmt_005fmessage_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f11, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f12(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f12 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f12_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f12.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f12.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(671,49) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f12.setKey("api.update.error.454");
      int _jspx_eval_fmt_005fmessage_005f12 = _jspx_th_fmt_005fmessage_005f12.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f12);
      _jspx_th_fmt_005fmessage_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f12, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f12_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f13(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f13 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f13_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f13.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f13.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(690,34) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f13.setKey("api.name.not.valid");
      int _jspx_eval_fmt_005fmessage_005f13 = _jspx_th_fmt_005fmessage_005f13.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f13);
      _jspx_th_fmt_005fmessage_005f13_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f13, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f13_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f14(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f14 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f14_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f14.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f14.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(694,34) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f14.setKey("api.name.whiteSpace");
      int _jspx_eval_fmt_005fmessage_005f14 = _jspx_th_fmt_005fmessage_005f14.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f14);
      _jspx_th_fmt_005fmessage_005f14_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f14, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f14_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f15(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f15 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f15_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f15.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f15.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(698,34) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f15.setKey("api.context.required");
      int _jspx_eval_fmt_005fmessage_005f15 = _jspx_th_fmt_005fmessage_005f15.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f15);
      _jspx_th_fmt_005fmessage_005f15_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f15, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f15_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f16(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f16 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f16_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f16.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f16.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(702,34) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f16.setKey("api.context.whiteSpace");
      int _jspx_eval_fmt_005fmessage_005f16 = _jspx_th_fmt_005fmessage_005f16.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f16);
      _jspx_th_fmt_005fmessage_005f16_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f16, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f16_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f17(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f17 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f17_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f17.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f17.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(707,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f17.setKey("api.port.invalid");
      int _jspx_eval_fmt_005fmessage_005f17 = _jspx_th_fmt_005fmessage_005f17.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f17);
      _jspx_th_fmt_005fmessage_005f17_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f17, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f17_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f18(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f18 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f18_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f18.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f18.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(713,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f18.setKey("api.version.required");
      int _jspx_eval_fmt_005fmessage_005f18 = _jspx_th_fmt_005fmessage_005f18.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f18.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f18);
      _jspx_th_fmt_005fmessage_005f18_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f18, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f18_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f19(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f19 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f19_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f19.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f19.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(721,42) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f19.setKey("api.name.not.valid");
      int _jspx_eval_fmt_005fmessage_005f19 = _jspx_th_fmt_005fmessage_005f19.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f19.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f19);
      _jspx_th_fmt_005fmessage_005f19_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f19, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f19_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f20(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f20 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f20_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f20.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f20.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(725,38) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f20.setKey("api.name.not.valid");
      int _jspx_eval_fmt_005fmessage_005f20 = _jspx_th_fmt_005fmessage_005f20.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f20.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f20);
      _jspx_th_fmt_005fmessage_005f20_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f20, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f20_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f21(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f21 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f21_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f21.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f21.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(738,50) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f21.setKey("api.resources.empty");
      int _jspx_eval_fmt_005fmessage_005f21 = _jspx_th_fmt_005fmessage_005f21.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f21.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f21);
      _jspx_th_fmt_005fmessage_005f21_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f21, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f21_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f22(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f22 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f22_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f22.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f22.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(747,35) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f22.setKey("resource.delete.confirmation");
      int _jspx_eval_fmt_005fmessage_005f22 = _jspx_th_fmt_005fmessage_005f22.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f22.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f22);
      _jspx_th_fmt_005fmessage_005f22_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f22, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f22_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f23(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f23 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f23_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f23.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f23.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(785,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f23.setKey("api.port.invalid");
      int _jspx_eval_fmt_005fmessage_005f23 = _jspx_th_fmt_005fmessage_005f23.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f23.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f23);
      _jspx_th_fmt_005fmessage_005f23_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f23, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f23_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f24(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f24 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f24_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f24.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f24.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(826,32) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f24.setKey("api.port.invalid");
      int _jspx_eval_fmt_005fmessage_005f24 = _jspx_th_fmt_005fmessage_005f24.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f24.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f24);
      _jspx_th_fmt_005fmessage_005f24_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f24, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f24_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f25(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f25 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f25_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f25.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f25.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(896,8) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f25.setKey("edit.api");
      int _jspx_eval_fmt_005fmessage_005f25 = _jspx_th_fmt_005fmessage_005f25.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f25.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f25);
      _jspx_th_fmt_005fmessage_005f25_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f25, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f25_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f26(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f26 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f26_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f26.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f26.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(898,8) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f26.setKey("generate.api.wizard");
      int _jspx_eval_fmt_005fmessage_005f26 = _jspx_th_fmt_005fmessage_005f26.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f26.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f26);
      _jspx_th_fmt_005fmessage_005f26_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f26, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f26_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f27(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f27 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f27_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f27.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f27.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(900,8) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f27.setKey("add.api");
      int _jspx_eval_fmt_005fmessage_005f27 = _jspx_th_fmt_005fmessage_005f27.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f27.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f27);
      _jspx_th_fmt_005fmessage_005f27_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f27, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f27_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f28(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f28 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f28_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f28.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f28.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(913,81) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f28.setKey("design.view.of.api");
      int _jspx_eval_fmt_005fmessage_005f28 = _jspx_th_fmt_005fmessage_005f28.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f28.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f28);
      _jspx_th_fmt_005fmessage_005f28_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f28, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f28_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f29(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f29 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f29_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f29.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f29.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(916,50) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f29.setKey("switch.to.source");
      int _jspx_eval_fmt_005fmessage_005f29 = _jspx_th_fmt_005fmessage_005f29.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f29.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f29);
      _jspx_th_fmt_005fmessage_005f29_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f29, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f29_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f30(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f30 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f30_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f30.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f30.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(923,51) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f30.setKey("switch.to.swagger.editor");
      int _jspx_eval_fmt_005fmessage_005f30 = _jspx_th_fmt_005fmessage_005f30.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f30.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f30);
      _jspx_th_fmt_005fmessage_005f30_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f30, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f30_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f31(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f31 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f31_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f31.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f31.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(937,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f31.setKey("api.name");
      int _jspx_eval_fmt_005fmessage_005f31 = _jspx_th_fmt_005fmessage_005f31.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f31.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f31);
      _jspx_th_fmt_005fmessage_005f31_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f31, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f31_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f32(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f32 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f32_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f32.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f32.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(951,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f32.setKey("api.context");
      int _jspx_eval_fmt_005fmessage_005f32 = _jspx_th_fmt_005fmessage_005f32.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f32.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f32);
      _jspx_th_fmt_005fmessage_005f32_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f32, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f32_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f33(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f33 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f33_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f33.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f33.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(966,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f33.setKey("api.hostname");
      int _jspx_eval_fmt_005fmessage_005f33 = _jspx_th_fmt_005fmessage_005f33.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f33.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f33);
      _jspx_th_fmt_005fmessage_005f33_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f33, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f33_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f34(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f34 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f34_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f34.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f34.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(976,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f34.setKey("api.port");
      int _jspx_eval_fmt_005fmessage_005f34 = _jspx_th_fmt_005fmessage_005f34.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f34.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f34);
      _jspx_th_fmt_005fmessage_005f34_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f34, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f34_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f35(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f35 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f35_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f35.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f35.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(986,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f35.setKey("api.version.type");
      int _jspx_eval_fmt_005fmessage_005f35 = _jspx_th_fmt_005fmessage_005f35.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f35.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f35);
      _jspx_th_fmt_005fmessage_005f35_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f35, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f35_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f36(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f36 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f36_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f36.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f36.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(1004,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f36.setKey("api.version");
      int _jspx_eval_fmt_005fmessage_005f36 = _jspx_th_fmt_005fmessage_005f36.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f36.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f36);
      _jspx_th_fmt_005fmessage_005f36_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f36, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f36_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f37(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f37 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f37_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f37.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f37.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(1013,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f37.setKey("api.swagger.definition");
      int _jspx_eval_fmt_005fmessage_005f37 = _jspx_th_fmt_005fmessage_005f37.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f37.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f37);
      _jspx_th_fmt_005fmessage_005f37_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f37, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f37_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f38(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f38 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f38_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f38.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f38.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(1019,44) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f38.setKey("select.swagger.reg");
      int _jspx_eval_fmt_005fmessage_005f38 = _jspx_th_fmt_005fmessage_005f38.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f38.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f38);
      _jspx_th_fmt_005fmessage_005f38_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f38, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f38_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f39(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f39 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f39_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f39.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f39.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(1022,44) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f39.setKey("select.swagger.file");
      int _jspx_eval_fmt_005fmessage_005f39 = _jspx_th_fmt_005fmessage_005f39.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f39.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f39);
      _jspx_th_fmt_005fmessage_005f39_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f39, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f39_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f40(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f40 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f40_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f40.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f40.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(1030,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f40.setKey("swagger.refkey");
      int _jspx_eval_fmt_005fmessage_005f40 = _jspx_th_fmt_005fmessage_005f40.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f40.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f40);
      _jspx_th_fmt_005fmessage_005f40_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f40, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f40_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f41(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f41 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f41_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f41.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f41.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(1040,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f41.setKey("conf.registry");
      int _jspx_eval_fmt_005fmessage_005f41 = _jspx_th_fmt_005fmessage_005f41.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f41.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f41);
      _jspx_th_fmt_005fmessage_005f41_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f41, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f41_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f42(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f42 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f42_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f42.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f42.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(1046,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f42.setKey("gov.registry");
      int _jspx_eval_fmt_005fmessage_005f42 = _jspx_th_fmt_005fmessage_005f42.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f42.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f42);
      _jspx_th_fmt_005fmessage_005f42_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f42, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f42_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f43(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f43 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f43_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f43.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f43.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(1056,36) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f43.setKey("swagger.uri");
      int _jspx_eval_fmt_005fmessage_005f43 = _jspx_th_fmt_005fmessage_005f43.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f43.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f43);
      _jspx_th_fmt_005fmessage_005f43_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f43, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f43_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f44(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f44 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f44_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f44.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f44.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(1093,44) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f44.setKey("design.view.of.the.resource");
      int _jspx_eval_fmt_005fmessage_005f44 = _jspx_th_fmt_005fmessage_005f44.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f44.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f44);
      _jspx_th_fmt_005fmessage_005f44_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f44, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f44_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f45(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f45 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f45_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f45.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f45.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(1097,55) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f45.setKey("switch.to.source");
      int _jspx_eval_fmt_005fmessage_005f45 = _jspx_th_fmt_005fmessage_005f45.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f45.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f45);
      _jspx_th_fmt_005fmessage_005f45_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f45, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f45_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f46(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f46 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f46_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f46.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f46.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(1121,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f46.setKey("save");
      int _jspx_eval_fmt_005fmessage_005f46 = _jspx_th_fmt_005fmessage_005f46.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f46.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f46);
      _jspx_th_fmt_005fmessage_005f46_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f46, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f46_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f47(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f47 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f47_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f47.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f47.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
      // /api/manageAPI.jsp(1125,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f47.setKey("cancel");
      int _jspx_eval_fmt_005fmessage_005f47 = _jspx_th_fmt_005fmessage_005f47.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f47.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f47);
      _jspx_th_fmt_005fmessage_005f47_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f47, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f47_reused);
    }
    return false;
  }
}
